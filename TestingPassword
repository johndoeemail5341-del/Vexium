<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <base target="_top">
  <meta name="viewport" content="width=device-width,initial-scale=1">

  <style>
    /* Modal canvas: fixed size from Apps Script; prevent scrolling inside */
    html, body {
      height: 100%; margin: 0; overflow: hidden;
      background: #f3f4f6; /* light neutral */
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial;
      color: #0f172a;
      -webkit-font-smoothing: antialiased;
    }

    /* Big alert-style wrapper so content feels like a modal alert */
    .wrap {
      height: 100%; width: 100%;
      display: grid; place-items: center;
      padding: 24px;
      box-sizing: border-box;
    }

    .alert {
      width: min(720px, 92%);
      background: #ffffff;
      border: 1px solid #e5e7eb;
      border-radius: 14px;
      box-shadow: 0 20px 60px rgba(2,6,23,0.12);
      padding: 28px 24px;
      text-align: center;
      transition: opacity .25s ease, transform .25s ease;
    }

    .hdr {
      display: flex; align-items: center; justify-content: center; gap: 12px;
      margin-bottom: 10px;
    }
    .icon {
      width: 42px; height: 42px; border-radius: 12px;
      display: grid; place-items: center;
      background: #f8fafc; border: 1px solid #e5e7eb;
    }
    .title {
      font-size: 1.25rem; font-weight: 800; margin: 0;
    }
    .desc {
      margin: 6px 0 16px; color: #475569; font-size: .98rem;
    }

    .grid {
      display: grid; grid-template-columns: 1fr auto; gap: 10px;
      margin-top: 6px;
    }
    .input {
      height: 46px; width: 100%; box-sizing: border-box;
      border: 1px solid #e5e7eb; border-radius: 10px; background: #f9fafb;
      padding: 0 12px; font-size: 1rem; outline: none;
      transition: border-color .12s ease, background .12s ease;
    }
    .input:focus { border-color: #cbd5e1; background: #fff; }

    .btn {
      height: 46px; min-width: 120px;
      border: 1px solid #e5e7eb; border-radius: 10px;
      background: #111827; color: #fff; font-weight: 800; letter-spacing: .3px;
      cursor: pointer; user-select: none;
      transition: transform .06s ease, opacity .12s ease;
    }
    .btn:hover { opacity: .96; }
    .btn:active { transform: translateY(1px); }
    .btn:disabled { opacity: .6; cursor: not-allowed; }

    .status {
      margin-top: 12px; font-size: .98rem; color: #6b7280; min-height: 1.25em;
    }
    .status.ok  { color: #166534; }
    .status.bad { color: #b91c1c; }
    .status.chk { color: #374151; }

    /* Success swap area */
    .hello {
      display: none;
      font-size: 3rem; font-weight: 800; letter-spacing: .5px;
    }
  </style>
</head>
<body>
  <div class="wrap">
    <div id="alert" class="alert" role="dialog" aria-labelledby="t" aria-modal="true">
      <div class="hdr">
        <div class="icon" aria-hidden="true">
          <!-- bell/alert icon -->
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#334155" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
            <path d="M6 8a6 6 0 1 1 12 0c0 7 3 7 3 9H3c0-2 3-2 3-9Z"></path>
            <path d="M10 19a2 2 0 0 0 4 0"></path>
          </svg>
        </div>
        <h1 id="t" class="title">Protected Page</h1>
      </div>
      <p class="desc">This console is password protected.</p>

      <div class="grid">
        <input id="pw" class="input" type="password" placeholder="passphrase" autocomplete="current-password">
        <button id="go" class="btn" type="button">Enter</button>
      </div>

      <div id="status" class="status" aria-live="polite">Waiting…</div>

      <!-- Success swap (optional) -->
      <div id="hello" class="hello" aria-hidden="true">hello</div>
    </div>
  </div>

  <script>
    const $ = (id) => document.getElementById(id);
    const alertBox = $("alert");
    const pw = $("pw");
    const go = $("go");
    const statusEl = $("status");
    const hello = $("hello");

    function setStatus(kind, text) {
      statusEl.className = "status " + (kind || "");
      statusEl.textContent = text;
    }
    function setBusy(b) {
      go.disabled = b; pw.disabled = b;
      if (b && document.activeElement) document.activeElement.blur();
    }

    function submit() {
      const value = (pw.value || "").trim();
      if (!value) { setStatus("bad", "Please enter a passphrase."); return; }
      setStatus("chk", "checking…");
      setBusy(true);

      google.script.run
        .withSuccessHandler(function(ok){
          if (ok) {
            // Either just report success...
            // setStatus("ok","correct"); setBusy(false);

            // ...OR swap to the success message (kept here, since you liked it)
            alertBox.innerHTML = "";           // clear alert content
            alertBox.appendChild(hello);       // move hello inside
            hello.style.display = "block";
            hello.setAttribute("aria-hidden", "false");
            // You can add a simple fade using CSS or leave static.
          } else {
            setStatus("bad", "incorrect password");
            setBusy(false);
          }
        })
        .withFailureHandler(function(){
          setStatus("", "checking failed — try again");
          setBusy(false);
        })
        .checkPassword(value);
    }

    go.addEventListener("click", submit);
    pw.addEventListener("keydown", (e)=>{ if (e.key === "Enter") submit(); });

    // autofocus
    setTimeout(()=> pw.focus(), 0);
  </script>
</body>
</html>
