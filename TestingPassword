<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <base target="_top">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    html,body{
      height:100%;margin:0;overflow:hidden;background:#f3f4f6;
      font-family:ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Arial;color:#0f172a;
    }

    /* ===== Namecard & Time (hidden until success) ===== */
    .user-chip{
      position:fixed;top:14px;left:14px;display:none;align-items:center;gap:10px;
      padding:8px 10px;border:1px solid #e5e7eb;border-radius:12px;background:#fff;
      box-shadow:0 8px 20px rgba(2,6,23,.08);width:220px;z-index:9999;
    }
    .user-chip img{width:36px;height:36px;border-radius:10px;object-fit:cover;background:#f1f5f9;border:1px solid #e5e7eb;}
    .user-text{line-height:1.05;overflow:hidden;}
    .name-line{font-weight:800;font-size:.95rem;color:#111827;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;}
    .email-line{font-size:.8rem;color:#64748b;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;}

    .time-box{
      position:fixed;top:78px;left:14px;width:220px;padding:6px 0;border:1px solid #e5e7eb;border-radius:12px;
      background:#fff;box-shadow:0 8px 20px rgba(2,6,23,.08);text-align:center;font-weight:700;font-size:1rem;color:#111827;
      display:none;z-index:9998;
    }

    /* ===== Modal Shell ===== */
    .wrap{height:100%;width:100%;display:grid;place-items:center;padding:24px;box-sizing:border-box;}
    .alert{
      width:min(920px,92%);min-height:540px;background:#fff;border:1px solid #e5e7eb;border-radius:14px;
      box-shadow:0 20px 60px rgba(2,6,23,.12);padding:0;overflow:hidden;transition:opacity .25s ease,transform .25s ease;
    }
    .header{display:flex;align-items:center;justify-content:space-between;padding:16px 18px;border-bottom:1px solid #e5e7eb;}
    .brand{display:flex;align-items:center;gap:10px;}
    .icon{width:38px;height:38px;border-radius:10px;display:grid;place-items:center;background:#f8fafc;border:1px solid #e5e7eb;}
    .title{margin:0;font-size:1.1rem;font-weight:800;}
    .content{padding:22px;}

    /* ===== Password Card ===== */
    .pw-card{padding:8px 0;text-align:center;}
    .desc{margin:0 0 12px;color:#475569;font-size:.98rem;}
    .pw-form{display:flex;flex-direction:column;align-items:center;gap:10px;margin-top:8px;}
    .input{
      width:280px;height:40px;border:1px solid #e5e7eb;border-radius:10px;background:#f9fafb;
      padding:0 12px;font-size:1rem;outline:none;text-align:center;
      transition:border-color .12s ease,background .12s ease;
    }
    .input:focus{border-color:#cbd5e1;background:#fff;}
    .btn{
      width:140px;height:40px;border:1px solid #e5e7eb;border-radius:10px;background:#111827;color:#fff;
      font-weight:800;letter-spacing:.3px;cursor:pointer;user-select:none;
    }
    .btn:disabled{opacity:.55;cursor:not-allowed;}
    .status{margin-top:10px;color:#6b7280;min-height:1.25em;font-size:.98rem;}
    .status.ok{color:#166534;} .status.bad{color:#b91c1c;} .status.chk{color:#374151;}

    /* Faint repo info line */
    .repo-info{
      margin-top:10px;
      font-size:.85rem;
      color:#94a3b8; /* slate-400 */
      user-select:none;
    }

    /* ===== Hello animation ===== */
    .hello{
      position:absolute;left:50%;top:50%;transform:translate(-50%,-50%) translateY(10px);
      font-size:3rem;font-weight:800;letter-spacing:.5px;opacity:0;
      transition:opacity 600ms ease,transform 600ms ease;pointer-events:none;
    }
    .hello.enter{opacity:1;transform:translate(-50%,-50%) translateY(0);}
    .hello.leave{opacity:0;transform:translate(-50%,-50%) translateY(-80px);}
  </style>
</head>
<body>
  <!-- Namecard (hidden until success) -->
  <div id="userChip" class="user-chip" aria-live="polite">
    <img id="userImg" alt="">
    <div class="user-text">
      <div id="userName" class="name-line"></div>
      <div id="userEmail" class="email-line"></div>
    </div>
  </div>
  <!-- Time Box (hidden until success) -->
  <div id="timeBox" class="time-box">--:--:--</div>

  <!-- Vexium Modal -->
  <div class="wrap">
    <div id="alertBox" class="alert" role="dialog" aria-modal="true">
      <div class="header">
        <div class="brand">
          <div class="icon" aria-hidden="true">
            <!-- Lock icon -->
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" stroke="#334155" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3.5" y="10" width="17" height="10.5" rx="2.5"></rect>
              <path d="M7.5 10V7a4.5 4.5 0 1 1 9 0v3"></path>
            </svg>
          </div>
          <h1 class="title">Vexium</h1>
        </div>
      </div>
      <div class="content">
        <div class="pw-card">
          <p class="desc">This console is password protected.</p>
          <div class="pw-form">
            <input id="pw" class="input" type="password" placeholder="passphrase" autocomplete="current-password">
            <button id="go" class="btn" type="button">Enter</button>
            <div id="status" class="status">Waiting…</div>
          </div>

          <!-- Faint last updated line (UTC "time ago") -->
          <div id="repoInfo" class="repo-info">Last time updated: —</div>
        </div>
      </div>
    </div>
  </div>

  <!-- Hello animation node -->
  <div id="hello" class="hello" aria-hidden="true">hello</div>

  <script>
    /* ========= utilities ========= */
    const $ = id => document.getElementById(id);
    const alertBox = $("alertBox");
    const pw = $("pw");
    const go = $("go");
    const statusEl = $("status");
    const helloAnim = $("hello");

    function setStatus(kind, text){
      statusEl.className = "status " + (kind || "");
      statusEl.textContent = text;
    }
    function setBusy(b){
      go.disabled = b; pw.disabled = b;
      if (b && document.activeElement) document.activeElement.blur();
    }
    function playHelloSequence(){
      helloAnim.style.opacity="0";
      helloAnim.classList.remove("enter","leave");
      helloAnim.setAttribute("aria-hidden","false");
      void helloAnim.offsetWidth; // reflow
      requestAnimationFrame(()=>{
        helloAnim.classList.add("enter");
        setTimeout(()=>{
          void helloAnim.offsetWidth;
          helloAnim.classList.add("leave");
        }, 800);
      });
    }

    /* ========= Namecard + clock after success ========= */
    function loadNameCard(){
      const chip=$("userChip"),img=$("userImg"),nameEl=$("userName"),emailEl=$("userEmail");
      google.script.run
        .withSuccessHandler(d=>{
          const name=(d&&d.name)||"User";
          const email=(d&&d.email)||"";
          const photo=(d&&d.photoDataUrl)||"";
          nameEl.textContent = name;
          emailEl.textContent = email;
          if (photo){ img.src = photo; img.alt = name; }
          chip.style.display = "inline-flex";
        })
        .withFailureHandler(()=>{
          $("userName").textContent = "User";
          $("userChip").style.display = "inline-flex";
        })
        .getUserCardData();
    }

    function startClockOnce(){
      if (window._clockStarted) return;
      window._clockStarted = true;
      const box = $("timeBox");
      box.style.display = "inline-block";
      function tick(){
        // Display is local device time; "time ago" uses UTC difference internally.
        const n = new Date();
        const h = String(n.getHours()).padStart(2,"0");
        const m = String(n.getMinutes()).padStart(2,"0");
        const s = String(n.getSeconds()).padStart(2,"0");
        box.textContent = `${h}:${m}:${s}`;
      }
      tick();
      setInterval(tick, 1000);
    }

    /* ========= Password+Auth submit ========= */
    function submit(){
      const v = (pw.value || "").trim();
      if (!v){ setStatus("bad","Please enter a passphrase."); return; }
      setStatus("chk","checking…"); setBusy(true);

      google.script.run
        .withSuccessHandler(res=>{
          if (res && res.ok) {
            alertBox.style.opacity = "0"; alertBox.style.transform = "scale(.98)";
            setTimeout(()=>{ alertBox.style.visibility="hidden"; }, 250);
            playHelloSequence(); loadNameCard(); startClockOnce();
          } else {
            if (res && res.pwOk && !res.driveOk) {
              setStatus("bad", "you are not authenticated");
            } else {
              setStatus("bad", "incorrect password");
            }
            setBusy(false);
          }
        })
        .withFailureHandler(()=>{
          setStatus("", "checking failed — try again");
          setBusy(false);
        })
        .authenticate(v);
    }

    go.addEventListener("click", submit);
    pw.addEventListener("keydown", e=>{ if(e.key==="Enter") submit(); });

    /* ========= Repo "last updated" (UTC) ========= */
    (function initRepoInfo(){
      const line = $("repoInfo");
      google.script.run
        .withSuccessHandler(r=>{
          if (!r || !r.ok || !r.isoUtc) { line.textContent = "Last time updated: —"; return; }
          line.textContent = "Last time updated: " + timeAgoUTC(r.isoUtc);
        })
        .withFailureHandler(()=>{ line.textContent = "Last time updated: —"; })
        .getTemplateLastUpdated();
    })();

    // Computes "X ago" using UTC
    function timeAgoUTC(isoUtc){
      try{
        const then = new Date(isoUtc);         // already UTC
        const now  = new Date();               // current time
        const diffMs = now.getTime() - then.getTime();
        const sec = Math.max(0, Math.floor(diffMs / 1000));
        const units = [
          ["year",   365*24*3600],
          ["month",  30*24*3600],
          ["day",    24*3600],
          ["hour",   3600],
          ["minute", 60],
          ["second", 1],
        ];
        for (const [name, size] of units){
          const val = Math.floor(sec / size);
          if (val >= 1) return `${val} ${name}${val>1?"s":""} ago (UTC)`;
        }
        return "just now (UTC)";
      }catch(_){
        return "—";
      }
    }

    // autofocus
    setTimeout(()=> pw.focus(), 0);
  </script>
</body>
</html>
