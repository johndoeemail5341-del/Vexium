<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <base target="_top">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    html, body { height: 100%; margin: 0; overflow: hidden; }
    body {
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial;
      background: #f3f4f6;
      display: grid; place-items: center;
      -webkit-font-smoothing: antialiased; color: #111827;
    }
    .card {
      width: 92%; max-width: 360px; text-align: center;
      background: #fff; border: 1px solid #e5e7eb; border-radius: 10px;
      box-shadow: 0 10px 30px rgba(0,0,0,.07); padding: 22px 20px;
      transition: opacity .25s ease, transform .25s ease;
    }
    .title { margin: 0 0 14px 0; font-size: 1.1rem; font-weight: 700; }
    .group { margin: 12px 0 10px; }
    .input {
      width: 100%; height: 42px; border: 1px solid #e5e7eb; border-radius: 6px;
      padding: 0 12px; font-size: .98rem; background: #f9fafb; outline: none;
      transition: border-color .12s ease, background .12s ease;
    }
    .input:focus { border-color: #cbd5e1; background: #fff; }
    .btn {
      width: 100%; height: 42px; border: 1px solid #e5e7eb; border-radius: 6px;
      background: #111827; color: #fff; font-weight: 700; letter-spacing: .3px;
      cursor: pointer; transition: transform .06s ease, opacity .12s ease;
    }
    .btn:hover { opacity: .96; } .btn:active { transform: translateY(1px); }
    .btn:disabled { opacity: .6; cursor: not-allowed; }
    .status { margin-top: 10px; font-size: .92rem; color: #6b7280; min-height: 1.2em; }
    .status.ok{color:#166534}.status.bad{color:#b91c1c}.status.chk{color:#374151}

    /* hello animation */
    .hello {
      display:none; font-size:2rem; font-weight:700; color:#111827;
      opacity:0; transform: translateY(6px);
      will-change: opacity, transform;
    }
    .hello.in { animation: helloIn 500ms ease forwards; }
    @keyframes helloIn {
      from { opacity:0; transform: translateY(6px); }
      to   { opacity:1; transform: translateY(0); }
    }
    .hello.out { animation: helloOut 600ms ease-in forwards; }
    @keyframes helloOut {
      to { opacity:0; transform: translateY(-20px); }
    }
  </style>
</head>
<body>
  <div id="card" class="card" role="group" aria-labelledby="t">
    <h3 id="t" class="title">Protected Page</h3>
    <div class="group">
      <input id="pw" class="input" type="password" placeholder="passphrase" autocomplete="current-password">
    </div>
    <button id="go" class="btn" type="button">Enter</button>
    <div id="status" class="status" aria-live="polite">This console is password protected.</div>
  </div>

  <!-- Success message -->
  <div id="hello" class="hello">hello</div>

  <script>
    const $ = id => document.getElementById(id);
    const pw = $("pw"), go = $("go"), statusEl = $("status"),
          card = $("card"), hello = $("hello");

    function setStatus(kind, text){ statusEl.className="status "+(kind||""); statusEl.textContent=text; }
    function setBusy(b){ go.disabled=b; pw.disabled=b; if(b) document.activeElement?.blur(); }

    function submit(){
      const value = (pw.value||"").trim();
      if(!value){ setStatus("bad","Please enter a passphrase."); return; }
      setStatus("chk","checking…"); setBusy(true);

      google.script.run
        .withSuccessHandler(ok=>{
          if(ok){
            // Hide card
            card.style.opacity="0";
            setTimeout(()=>{
              card.style.display="none";
              // Show "hello", fade in, then fade out and glide up
              hello.style.display="block";
              // start fade-in
              hello.classList.add("in");

              const afterIn = (e)=>{
                if(e.animationName!=="helloIn") return;
                hello.removeEventListener("animationend", afterIn);
                // small pause before fade-out
                setTimeout(()=>{ hello.classList.add("out"); }, 600);
              };
              const afterOut = (e)=>{
                if(e.animationName!=="helloOut") return;
                hello.removeEventListener("animationend", afterOut);
                // optional: remove element or keep hidden
                // hello.style.display="none";
              };
              hello.addEventListener("animationend", afterIn);
              hello.addEventListener("animationend", afterOut);
            }, 250);
          } else {
            setStatus("bad","incorrect password"); setBusy(false);
          }
        })
        .withFailureHandler(()=>{
          setStatus("", "checking failed — try again"); setBusy(false);
        })
        .checkPassword(value);
    }

    go.addEventListener("click", submit);
    pw.addEventListener("keydown", e=>{ if(e.key==="Enter") submit(); });
    setTimeout(()=> pw.focus(), 0);
  </script>
</body>
</html>
