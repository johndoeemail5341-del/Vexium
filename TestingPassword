<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <base target="_top">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    /* Canvas: fixed 1000×1000 from Apps Script; no scroll */
    html, body { height:100%; margin:0; overflow:hidden; background:#f3f4f6;
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; color:#0f172a; }

    .wrap { height:100%; width:100%; display:grid; place-items:center; padding:24px; box-sizing:border-box; }

    .alert {
      width:min(560px, 92%);
      background:#fff; border:1px solid #e5e7eb; border-radius:14px;
      box-shadow:0 20px 60px rgba(2,6,23,.12);
      padding:28px 24px; text-align:center;
      transition:opacity .25s ease, transform .25s ease;
    }

    .hdr { display:flex; align-items:center; justify-content:center; gap:12px; margin-bottom:10px; }
    .icon { width:42px; height:42px; border-radius:12px; display:grid; place-items:center;
      background:#f8fafc; border:1px solid #e5e7eb; }
    .title { margin:0; font-size:1.25rem; font-weight:800; }
    .desc { margin:6px 0 16px; color:#475569; font-size:.98rem; }

    /* Square-ish, centered form */
    .form { display:flex; flex-direction:column; align-items:center; gap:10px; }
    .input {
      width:280px; height:40px;                   /* square-ish */
      border:1px solid #e5e7eb; border-radius:10px;
      background:#f9fafb; padding:0 12px; font-size:1rem; outline:none;
      transition:border-color .12s ease, background .12s ease;
      text-align:center;                          /* centered text */
    }
    .input:focus { border-color:#cbd5e1; background:#fff; }
    .btn {
      width:140px; height:40px;                   /* compact button */
      border:1px solid #e5e7eb; border-radius:10px;
      background:#111827; color:#fff; font-weight:800; letter-spacing:.3px;
      cursor:pointer; user-select:none; transition:transform .06s ease, opacity .12s ease;
    }
    .btn:hover { opacity:.96; } .btn:active { transform:translateY(1px); }
    .btn:disabled { opacity:.6; cursor:not-allowed; }

    .status { margin-top:12px; font-size:.98rem; color:#6b7280; min-height:1.25em; }
    .status.ok  { color:#166534; }
    .status.bad { color:#b91c1c; }
    .status.chk { color:#374151; }

    /* Success text animation: fade in, then glide up + fade out */
    .hello {
      position:absolute; left:50%; top:50%; transform:translate(-50%, -50%) translateY(10px);
      font-size:3rem; font-weight:800; letter-spacing:.5px; opacity:0;
      transition:opacity 600ms ease, transform 600ms ease;
      pointer-events:none; will-change:opacity, transform;
    }
    .hello.enter { opacity:1; transform:translate(-50%, -50%) translateY(0); }
    .hello.leave { opacity:0; transform:translate(-50%, -50%) translateY(-80px); }
  </style>
</head>
<body>
  <div class="wrap">
    <div id="alert" class="alert" role="dialog" aria-labelledby="t" aria-modal="true">
      <div class="hdr">
        <div class="icon" aria-hidden="true">
          <!-- LOCK ICON -->
          <svg viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#334155" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3.5" y="10" width="17" height="10.5" rx="2.5"></rect>
            <path d="M7.5 10V7a4.5 4.5 0 1 1 9 0v3"></path>
          </svg>
        </div>
        <h1 id="t" class="title">Protected Page</h1>
      </div>

      <p class="desc">This console is password protected.</p>

      <div class="form">
        <input id="pw" class="input" type="password" placeholder="passphrase" autocomplete="current-password">
        <button id="go" class="btn" type="button">Enter</button>
      </div>

      <div id="status" class="status" aria-live="polite">Waiting…</div>
    </div>
  </div>

  <!-- Keep hello in DOM so transitions can run in modal -->
  <div id="hello" class="hello" aria-hidden="true">hello</div>

  <script>
    const $ = id => document.getElementById(id);
    const alertBox = $("alert"), pw = $("pw"), go = $("go"), statusEl = $("status"), hello = $("hello");

    function setStatus(kind, text){ statusEl.className = "status " + (kind || ""); statusEl.textContent = text; }
    function setBusy(b){ go.disabled=b; pw.disabled=b; if(b && document.activeElement) document.activeElement.blur(); }

    function playHelloSequence() {
      // Place hello over the modal center
      hello.style.opacity = "0"; hello.classList.remove("enter","leave");
      hello.setAttribute("aria-hidden","false");

      // Ensure it's visible and transitions can trigger
      // 1) ensure it's on screen
      // (we don't use display:none anywhere; just rely on opacity)
      // 2) force reflow then toggle classes with RAF for reliability
      void hello.offsetWidth; // reflow
      requestAnimationFrame(()=>{
        hello.classList.add("enter");        // fade in
        // After it finishes entering, start the leave
        setTimeout(()=>{
          // force reflow before leaving to ensure transition runs
          void hello.offsetWidth;
          hello.classList.add("leave");      // glide up + fade out
        }, 800); // hold visible ~0.8s
      });
    }

    function submit(){
      const value = (pw.value||"").trim();
      if(!value){ setStatus("bad","Please enter a passphrase."); return; }
      setStatus("chk","checking…"); setBusy(true);

      google.script.run
        .withSuccessHandler(ok=>{
          if(ok){
            // Fade/scale alert away a bit for a nice exit
            alertBox.style.opacity = "0";
            alertBox.style.transform = "scale(.98)";
            setTimeout(()=>{ alertBox.style.visibility = "hidden"; }, 250);

            // Play the success animation
            playHelloSequence();
          } else {
            setStatus("bad","incorrect password"); setBusy(false);
          }
        })
        .withFailureHandler(()=>{
          setStatus("", "checking failed — try again"); setBusy(false);
        })
        .checkPassword(value);
    }

    go.addEventListener("click", submit);
    pw.addEventListener("keydown", e => { if(e.key === "Enter") submit(); });

    // Autofocus
    setTimeout(()=> pw.focus(), 0);
  </script>
</body>
</html>
